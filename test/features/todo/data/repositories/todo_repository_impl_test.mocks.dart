// Mocks generated by Mockito 5.4.6 from annotations
// in app_for_test_example/test/features/todo/data/repositories/todo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_for_test_example/feartures/todo/data/datasources/todo_local_datasource.dart'
    as _i3;
import 'package:app_for_test_example/feartures/todo/data/models/todo_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTodoModel_0 extends _i1.SmartFake implements _i2.TodoModel {
  _FakeTodoModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TodoLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoLocalDatasource extends _i1.Mock
    implements _i3.TodoLocalDatasource {
  MockTodoLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.TodoModel> getTodo(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTodo, [id]),
            returnValue: _i4.Future<_i2.TodoModel>.value(
              _FakeTodoModel_0(this, Invocation.method(#getTodo, [id])),
            ),
          )
          as _i4.Future<_i2.TodoModel>);

  @override
  _i4.Future<List<_i2.TodoModel>> getAllTodos() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTodos, []),
            returnValue: _i4.Future<List<_i2.TodoModel>>.value(
              <_i2.TodoModel>[],
            ),
          )
          as _i4.Future<List<_i2.TodoModel>>);

  @override
  _i4.Future<bool> saveTodo(_i2.TodoModel? todo) =>
      (super.noSuchMethod(
            Invocation.method(#saveTodo, [todo]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}
